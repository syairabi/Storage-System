<!-- views/index.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>File Storage System</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
        }
        .nav-bar {
            background-color: #1a237e;
            padding: 1rem;
            color: white;
        }
        .container {
            padding: 20px;
            max-width: 1200px;
            margin: 0 auto;
        }
        .tabs {
            display: flex;
            border-bottom: 1px solid #ccc;
            margin-bottom: 20px;
        }
        .tab {
            padding: 10px 20px;
            cursor: pointer;
            border: none;
            background: none;
            color: #666;
        }
        .tab.active {
            border-bottom: 2px solid #1a237e;
            color: #1a237e;
        }
        .file-upload {
            border: 2px dashed #ccc;
            padding: 20px;
            text-align: center;
            margin-bottom: 20px;
        }
        .file-list {
            width: 100%;
            border-collapse: collapse;
        }
        .file-list th, .file-list td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        .file-list th {
            background-color: #f5f5f5;
        }
        .action-btn {
            padding: 6px 12px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        .view-btn {
            background-color: #4caf50;
            color: white;
        }
        .search-bar {
            padding: 8px;
            margin-bottom: 20px;
            width: 100%;
            max-width: 300px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
    </style>
</head>
<body>
    <div class="nav-bar">
        <h1>File Storage System</h1>
    </div>
    
    <div class="container">
        <div class="tabs">
            <button class="tab active" onclick="switchTab('organizer')">Organizer Approval</button>
            <button class="tab" onclick="switchTab('nominee')">Nominee Approval</button>
            <button class="tab" onclick="switchTab('history')">Approved History</button>
        </div>

        <input type="text" class="search-bar" placeholder="Search files...">

        <div class="file-upload">
            <h3>Upload New File</h3>
            <form id="uploadForm" enctype="multipart/form-data">
                <input type="file" id="fileInput" multiple>
                <button type="submit" class="action-btn">Upload</button>
            </form>
        </div>

        <table class="file-list">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Title</th>
                    <th>Details</th>
                    <th>Date</th>
                    <th>Status</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="fileListBody">
                <!-- File list will be populated dynamically -->
            </tbody>
        </table>
    </div>

    <script>
        function switchTab(tabName) {
            // Remove active class from all tabs
            document.querySelectorAll('.tab').forEach(tab => {
                tab.classList.remove('active');
            });
            
            // Add active class to clicked tab
            event.target.classList.add('active');
            
            // Here you would typically fetch and display relevant data based on the selected tab
            fetchFiles(tabName);
        }

        async function fetchFiles(category) {
            try {
                const response = await fetch(`/api/files/${category}`);
                const files = await response.json();
                updateFileList(files);
            } catch (error) {
                console.error('Error fetching files:', error);
            }
        }

        function updateFileList(files) {
            const tbody = document.getElementById('fileListBody');
            tbody.innerHTML = '';
            
            files.forEach(file => {
                const row = `
                    <tr>
                        <td>${file.id}</td>
                        <td>${file.title}</td>
                        <td>${file.details}</td>
                        <td>${new Date(file.date).toLocaleDateString()}</td>
                        <td>${file.status}</td>
                        <td>
                            <button class="action-btn view-btn" onclick="viewFile('${file.id}')">View</button>
                        </td>
                    </tr>
                `;
                tbody.innerHTML += row;
            });
        }

        document.getElementById('uploadForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const formData = new FormData();
            const files = document.getElementById('fileInput').files;
            
            for (let file of files) {
                formData.append('files', file);
            }

            try {
                const response = await fetch('/api/upload', {
                    method: 'POST',
                    body: formData
                });
                const result = await response.json();
                if (result.success) {
                    alert('Files uploaded successfully');
                    fetchFiles('organizer'); // Refresh the file list
                }
            } catch (error) {
                console.error('Error uploading files:', error);
                alert('Error uploading files');
            }
        });

        function viewFile(fileId) {
            window.open(`/api/files/view/${fileId}`, '_blank');
        }

        // Initial load
        fetchFiles('organizer');
    </script>
</body>
</html>